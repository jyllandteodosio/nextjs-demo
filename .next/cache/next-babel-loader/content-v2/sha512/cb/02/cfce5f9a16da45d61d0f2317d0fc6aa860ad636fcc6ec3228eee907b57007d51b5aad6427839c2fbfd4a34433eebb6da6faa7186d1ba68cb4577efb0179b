{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Projects\\\\react\\\\06-onwards-to-a-bigger-project-starting-project_2\\\\pages\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"first meetup\",\n  image: \"https://blog.onedaykorea.com/wp-content/uploads/2016/02/018-1-1030x644.jpg\",\n  address: \"Garosugil, Sinsadong, Gangnam, Seoul\",\n  description: \"sample\"\n}, {\n  id: \"m2\",\n  title: \"second meetup\",\n  image: \"https://www.gotokyo.org/en/destinations/western-tokyo/aoyama-and-omotesando/images/36_0118_5.jpg\",\n  address: \"Omotesando, Shibuya, Tokyo\",\n  description: \"sample\"\n}];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n} // export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   }\n// }\n\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\"mongodb+srv://layachanx3:ph8BLRe7d4cLiQS@cluster0.0fazi.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 10\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Projects/react/06-onwards-to-a-bigger-project-starting-project_2/pages/index.js"],"names":["MongoClient","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,KAAK,EACH,4EAJJ;AAKEC,EAAAA,OAAO,EAAE,sCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,KAAK,EACH,kGAJJ;AAKEC,EAAAA,OAAO,EAAE,4BALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAToB,CAAtB;;AAmBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,yGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AAChCjB,QAAAA,KAAK,EAAEiB,MAAM,CAACjB,KADkB;AAEhCE,QAAAA,OAAO,EAAEe,MAAM,CAACf,OAFgB;AAGhCD,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAHkB;AAIhCF,QAAAA,EAAE,EAAEkB,MAAM,CAACC,GAAP,CAAWC,QAAX;AAJ4B,OAAb,CAAZ;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD;AAED,eAAehB,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\n\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst DUMMY_MEETUPS = [\r\n  {\r\n    id: \"m1\",\r\n    title: \"first meetup\",\r\n    image:\r\n      \"https://blog.onedaykorea.com/wp-content/uploads/2016/02/018-1-1030x644.jpg\",\r\n    address: \"Garosugil, Sinsadong, Gangnam, Seoul\",\r\n    description: \"sample\",\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    title: \"second meetup\",\r\n    image:\r\n      \"https://www.gotokyo.org/en/destinations/western-tokyo/aoyama-and-omotesando/images/36_0118_5.jpg\",\r\n    address: \"Omotesando, Shibuya, Tokyo\",\r\n    description: \"sample\",\r\n  },\r\n];\r\n\r\nfunction HomePage(props) {\r\n  return <MeetupList meetups={props.meetups}></MeetupList>;\r\n}\r\n\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport async function getStaticProps() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://layachanx3:ph8BLRe7d4cLiQS@cluster0.0fazi.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => ({\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 10,\r\n  };\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}